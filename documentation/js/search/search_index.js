var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.891,1,1.871]],["body/controllers/AppController.html",[0,1.478,1,3.104,2,1.349,3,0.54,4,0.465,5,0.465,6,3.399,7,0.655,8,0.039,9,0.888,10,2.655,11,3.399,12,0.54,13,0.082,14,2.273,15,1.83,16,0.032,17,0.032]],["title/modules/AppModule.html",[18,1.091,19,1.871]],["body/modules/AppModule.html",[1,2.915,2,1.359,3,0.404,4,0.348,5,0.348,7,0.707,8,0.039,9,0.665,10,2.664,11,2.545,12,0.404,13,0.061,16,0.027,17,0.027,18,1.699,19,3.623,20,1.37,21,1.37,22,1.702,23,1.702,24,1.37,25,2.588,26,1.702,27,2.545,28,2.545,29,2.545,30,2.664,31,2.976,32,2.396,33,2.29,34,1.702,35,1.523,36,3.091,37,2.579,38,3.091,39,3.091,40,3.091,41,3.091]],["title/injectables/AppService.html",[10,1.487,42,1.091]],["body/injectables/AppService.html",[3,0.52,4,0.448,5,0.448,7,0.52,8,0.039,9,0.856,10,2.411,12,0.52,13,0.079,16,0.032,17,0.032,42,1.769,43,2.19,44,3.275,45,0.856,46,2.169,47,5.531,48,1.175,49,3.978,50,1.763,51,1.599,52,1.763,53,3.978,54,3.978]],["title/controllers/AuthController.html",[0,0.891,55,1.871]],["body/controllers/AuthController.html",[0,1.208,2,1.336,3,0.535,4,0.46,5,0.46,7,0.651,8,0.039,9,0.88,12,0.535,13,0.081,14,2.251,15,1.812,16,0.032,17,0.032,55,3.086,56,3.367,57,2.535,58,4.09,59,2.378,60,3.367,61,4.09]],["title/modules/AuthModule.html",[18,1.091,30,1.487]],["body/modules/AuthModule.html",[2,1.431,3,0.437,4,0.376,5,0.376,7,0.678,8,0.039,9,0.718,12,0.437,13,0.066,16,0.028,17,0.028,18,1.766,20,1.48,21,1.48,22,1.838,23,1.838,24,1.48,25,2.69,26,2.69,30,2.774,32,1.941,33,2.41,34,1.838,35,1.645,37,2.07,55,3.029,59,2.621,60,2.749,62,2.749,63,2.749,64,2.749,65,3.339,66,2.715,67,3.339,68,2.749]],["title/injectables/AuthService.html",[42,1.091,59,1.338]],["body/injectables/AuthService.html",[3,0.393,4,0.338,5,0.338,7,0.534,8,0.039,9,0.647,12,0.393,13,0.059,15,1.332,16,0.026,17,0.026,42,1.475,43,1.655,45,0.647,46,1.809,48,1.369,50,1.809,51,1.869,52,1.809,59,1.809,66,1.863,69,2.475,70,2.642,71,4.093,72,4.082,73,2.885,74,2.475,75,2.193,76,3.006,77,2.011,78,2.011,79,1.088,80,1.334,81,3.006,82,3.006,83,4.082,84,3.816,85,2.552,86,3.006,87,2.125,88,2.475,89,2.475,90,2.475,91,2.475,92,2.125,93,1.481,94,3.006,95,3.006,96,2.475]],["title/classes/CreatePostDto.html",[13,0.06,97,1.871]],["body/classes/CreatePostDto.html",[3,0.16,4,0.137,5,0.137,7,0.489,8,0.039,12,0.16,13,0.052,16,0.013,17,0.013,45,0.263,48,1.321,51,1.597,79,1.387,80,1.538,96,2.551,97,1.27,98,0.601,99,3.251,100,1.005,101,1.304,102,3.269,103,2.646,104,2.646,105,3.43,106,2.646,107,3.452,108,3.971,109,2.842,110,3.452,111,2.842,112,1.983,113,3.076,114,2.471,115,2.048,116,3.098,117,3.309,118,4.166,119,3.875,120,1.221,121,1.221,122,2.048,123,2.048,124,3.737,125,2.048,126,1.221,127,1.221,128,1.921,129,3.737,130,2.048,131,2.048,132,3.269,133,2.048,134,1.221,135,1.221,136,1.221,137,3.098,138,3.098,139,1.127,140,1.686,141,1.686,142,3.098,143,1.221,144,1.221,145,3.098,146,1.686,147,2.551,148,2.048,149,1.448,150,2.048,151,1.221,152,1.221,153,2.048,154,2.44,155,2.14,156,1.221,157,1.221,158,1.686,159,1.686,160,2.048,161,4.166,162,3.971,163,1.221,164,1.686,165,2.048,166,2.048,167,2.048,168,2.048,169,2.048,170,1.221,171,2.842,172,1.686,173,2.048,174,1.221,175,1.221,176,2.048,177,1.005,178,1.221,179,1.221,180,3.098,181,1.221,182,2.178,183,1.221,184,1.221,185,1.221,186,2.44,187,2.44,188,1.005,189,2.807,190,2.048,191,2.048,192,2.048,193,2.646,194,2.048,195,0.672,196,1.221,197,1.221,198,1.005,199,1.221,200,0.863,201,3.452,202,3.269,203,0.672,204,2.319,205,1.005,206,1.221,207,1.221,208,1.221,209,1.221,210,1.221,211,1.221,212,1.221,213,1.005,214,1.005,215,1.005,216,1.221,217,2.048]],["title/classes/CreatePostMetaOptionsDto.html",[13,0.06,128,1.871]],["body/classes/CreatePostMetaOptionsDto.html",[3,0.483,4,0.416,5,0.416,7,0.483,8,0.038,12,0.483,13,0.092,16,0.03,17,0.03,45,0.794,48,1.379,51,1.527,79,1.245,98,1.819,99,3.623,101,2.302,112,2.07,114,2.271,128,2.896,154,3.623,155,3.177,186,3.807,187,3.302,195,2.032,218,3.04,219,3.692,220,3.692,221,3.692]],["title/classes/CreateUserDto.html",[13,0.06,222,1.487]],["body/classes/CreateUserDto.html",[3,0.367,4,0.316,5,0.316,7,0.367,8,0.038,12,0.367,13,0.077,16,0.025,17,0.025,45,0.603,48,1.426,51,1.793,79,1.286,80,1.271,84,3.679,87,3.159,98,1.381,101,1.917,112,2.14,164,3.203,182,2.308,186,3.413,187,3.413,188,2.308,189,2.75,195,1.543,215,3.203,222,1.917,223,4.176,224,1.982,225,3.679,226,4.469,227,2.803,228,2.803,229,2.803,230,2.803,231,2.803,232,2.803,233,2.803,234,4.828,235,3.891,236,3.891,237,3.891,238,3.891,239,3.891,240,4.321,241,3.891,242,2.142,243,3.891,244,3.891,245,2.803,246,3.891,247,2.803,248,3.891,249,2.803,250,2.803]],["title/classes/GetUsersParamDto.html",[13,0.06,251,1.487]],["body/classes/GetUsersParamDto.html",[3,0.437,4,0.376,5,0.376,7,0.639,8,0.039,12,0.437,13,0.097,16,0.028,17,0.028,45,0.718,48,0.986,79,1.472,80,1.431,85,2.964,93,2.157,98,1.645,101,2.157,112,1.48,113,2.749,117,2.715,189,3.095,195,1.838,200,2.36,202,3.605,203,1.838,204,1.645,242,2.964,251,2.157,252,3.605,253,2.41,254,2.749,255,3.605,256,3.339,257,3.339,258,4.379,259,3.339,260,3.339,261,3.339,262,2.36,263,2.749]],["title/classes/PatchUserDto.html",[13,0.06,264,1.661]],["body/classes/PatchUserDto.html",[3,0.456,4,0.392,5,0.392,7,0.589,8,0.039,12,0.456,13,0.108,16,0.029,17,0.029,79,1.2,80,1.471,98,1.717,198,2.87,204,1.717,222,2.69,224,2.464,264,2.479,265,2.87,266,4.503,267,4.503,268,4.107,269,4.503,270,3.707,271,4.503,272,4.503,273,4.503,274,4.503,275,4.503,276,4.503,277,4.503,278,3.486,279,2.87,280,2.464]],["title/controllers/PostsController.html",[0,0.891,281,1.871]],["body/controllers/PostsController.html",[0,0.861,2,0.953,3,0.381,4,0.328,5,0.328,7,0.642,8,0.039,9,0.627,12,0.381,13,0.058,14,1.605,15,1.292,16,0.026,17,0.026,45,0.627,46,1.772,48,1.181,50,1.772,51,1.491,52,1.292,57,1.807,70,2.618,77,1.97,78,1.97,79,1.065,80,1.604,97,3.294,112,1.772,114,2.022,203,1.605,281,2.478,282,2.4,283,2.916,284,3.998,285,3.998,286,2.916,287,2.916,288,2.916,289,2.916,290,3.998,291,2.916,292,3.998,293,4.042,294,2.061,295,2.061,296,1.97,297,2.4,298,2.4,299,2.061,300,2.916,301,2.916,302,2.916,303,2.916,304,2.916,305,2.916,306,2.916,307,2.916]],["title/modules/PostsModule.html",[18,1.091,31,1.661]],["body/modules/PostsModule.html",[2,1.449,3,0.445,4,0.383,5,0.383,7,0.683,8,0.039,9,0.732,12,0.445,13,0.067,16,0.029,17,0.029,18,1.782,20,1.509,21,1.509,22,1.874,23,1.874,24,1.509,25,2.715,26,1.874,31,3.158,32,2.462,33,2.441,34,1.874,35,1.677,37,2.749,68,2.803,281,3.057,296,2.737,297,2.803,308,2.803,309,3.404,310,2.803,311,3.404,312,3.404]],["title/injectables/PostsService.html",[42,1.091,296,1.487]],["body/injectables/PostsService.html",[3,0.407,4,0.35,5,0.35,7,0.547,8,0.039,9,0.67,12,0.407,13,0.062,14,1.714,15,1.38,16,0.027,17,0.027,42,1.511,43,1.714,45,0.67,46,1.852,48,1.234,50,1.38,51,1.542,52,1.38,70,2.325,73,2.2,74,2.563,75,2.166,77,2.059,78,2.059,79,1.114,80,1.366,89,2.563,92,2.2,93,2.592,102,4.153,111,4.153,293,3.441,296,2.059,313,2.563,314,3.441,315,3.113,316,4.18,317,3.113,318,3.113,319,3.113,320,4.153,321,3.441]],["title/controllers/UsersController.html",[0,0.891,322,1.487]],["body/controllers/UsersController.html",[0,0.431,2,0.477,3,0.191,4,0.164,5,0.164,7,0.498,8,0.039,9,0.314,12,0.191,13,0.029,16,0.015,17,0.015,45,0.314,46,1.052,48,1.123,50,2.052,51,1.243,52,1.904,57,0.905,70,2.589,77,1.478,78,1.478,79,0.921,80,1.404,85,2.466,93,1.478,112,1.686,114,1.532,139,2.62,149,2.444,155,1.471,159,1.201,177,1.201,222,2.117,240,1.954,242,2.366,251,1.703,253,2.62,262,3.038,263,3.357,264,2.549,270,1.201,280,1.678,294,2.882,295,2.121,299,1.031,321,1.954,322,1.169,323,3.357,324,1.201,325,2.47,326,2.846,327,2.47,328,1.954,329,2.846,330,1.201,331,1.459,332,2.846,333,1.459,334,1.201,335,3.365,336,1.954,337,1.459,338,2.374,339,2.374,340,2.374,341,2.374,342,4.479,343,3.538,344,1.678,345,2.374,346,2.374,347,3.457,348,2.374,349,2.374,350,2.374,351,2.374,352,2.121,353,1.201,354,2.47,355,1.459,356,2.846,357,1.459,358,1.459,359,3.457,360,3.457,361,2.846,362,1.201,363,1.459,364,1.031,365,1.031,366,1.201,367,1.201,368,1.201,369,1.459,370,1.459,371,1.459,372,1.459,373,1.459,374,1.459,375,1.459,376,1.459,377,1.201,378,1.678,379,1.201,380,1.201,381,1.201,382,1.459,383,3,384,3,385,1.459,386,1.459,387,1.459,388,1.459,389,2.846,390,1.459,391,1.201,392,1.459,393,1.459,394,1.459,395,2.47,396,1.201,397,1.201,398,1.201]],["title/controllers/UsersController-1.html",[0,0.748,322,1.248,344,1.79]],["body/controllers/UsersController-1.html",[0,0.488,2,0.54,3,0.216,4,0.186,5,0.186,7,0.564,8,0.039,9,0.355,12,0.216,13,0.033,14,0.91,15,0.732,16,0.017,17,0.017,45,0.355,46,1.163,48,1.196,50,2.003,51,1.066,52,2.003,57,1.024,70,2.633,75,1.304,77,1.607,78,1.996,79,1.204,80,1.066,85,1.796,93,1.996,109,1.36,112,1.795,114,1.646,117,2.302,119,3.058,132,3.058,139,2.581,149,1.168,158,2.16,203,0.91,204,2.31,222,2.227,242,2.829,251,1.83,253,2.659,255,2.16,262,2.306,264,2.659,280,1.854,294,1.854,295,1.854,298,1.36,299,1.168,322,1.292,325,2.16,326,3.058,327,2.685,328,2.16,329,3.058,330,1.36,332,3.058,334,1.36,335,3.048,336,1.36,343,2.685,344,1.854,352,1.854,353,1.36,354,2.685,356,3.058,361,2.685,362,1.36,364,1.168,365,1.168,366,1.36,368,1.36,377,1.36,378,1.854,379,1.36,380,1.36,381,1.36,389,2.685,391,1.36,395,2.685,396,1.36,397,1.36,398,1.36,399,1.36,400,1.652,401,1.652,402,1.652,403,2.623,404,3.714,405,2.623,406,2.16,407,2.623,408,1.652,409,2.623,410,1.652,411,2.623,412,2.623,413,2.623,414,1.652,415,2.623,416,2.623,417,2.623,418,1.652,419,1.652,420,1.652,421,1.36,422,2.623,423,3.262,424,2.623,425,1.652,426,1.652,427,1.652,428,1.652,429,1.652]],["title/modules/UsersModule.html",[18,1.091,32,1.338]],["body/modules/UsersModule.html",[2,1.431,3,0.437,4,0.376,5,0.376,7,0.678,8,0.039,9,0.718,12,0.437,13,0.066,16,0.028,17,0.028,18,1.766,20,1.48,21,1.48,22,1.838,23,1.838,24,1.48,25,2.69,26,2.69,30,2.157,32,2.496,33,2.41,34,1.838,35,1.645,37,2.07,66,2.715,75,2.365,322,2.407,421,2.749,430,2.749,431,2.749,432,2.749,433,3.339,434,3.339,435,3.339]],["title/injectables/UsersService.html",[42,1.091,75,1.207]],["body/injectables/UsersService.html",[3,0.333,4,0.287,5,0.287,7,0.555,8,0.04,9,0.548,12,0.333,13,0.05,15,1.13,16,0.024,17,0.024,42,1.315,43,1.404,45,0.548,46,1.613,48,1.253,50,1.613,51,1.664,52,1.613,59,2.322,66,1.581,70,2.508,71,2.997,73,2.573,75,1.455,77,2.091,78,2.091,79,1.131,80,1.387,85,2.695,87,3.272,88,2.099,90,2.099,91,2.099,92,1.802,93,1.256,139,2.337,225,3.811,242,2.803,251,2.281,253,1.404,314,3.495,335,3,352,2.573,364,1.802,365,1.802,436,2.099,437,3.64,438,2.55,439,2.55,440,2.55,441,2.55,442,3.64,443,2.55,444,2.55,445,2.55,446,2.55,447,2.55,448,2.55,449,3.64,450,3.64,451,2.55]],["title/coverage.html",[452,2.893]],["body/coverage.html",[0,1.533,1,1.857,5,0.337,6,2.466,8,0.039,10,1.476,13,0.103,16,0.026,17,0.026,24,1.328,42,1.794,44,2.466,55,1.857,56,2.466,59,1.328,69,2.466,75,1.198,79,0.798,97,1.857,99,2.879,100,2.466,114,1.328,128,1.857,218,2.466,222,1.476,223,2.466,224,2.879,251,1.476,252,2.466,253,1.649,254,2.466,264,1.649,265,2.466,281,1.857,282,2.466,296,1.476,313,2.466,322,2.007,323,2.466,324,2.466,378,2.117,399,2.466,436,2.466,452,2.117,453,2.466,454,2.996,455,2.996,456,5.815,457,4.627,458,4.073,459,4.073,460,2.466,461,2.996,462,4.073,463,2.996,464,2.996,465,2.996,466,2.996,467,2.996,468,2.996,469,2.996,470,2.996,471,2.996,472,2.996,473,2.996]],["title/dependencies.html",[21,1.606,474,2.085]],["body/dependencies.html",[8,0.039,9,0.852,13,0.097,16,0.032,17,0.032,21,1.755,195,2.18,200,2.799,203,2.18,268,3.26,279,3.26,367,3.26,475,3.96,476,3.96,477,5.291,478,3.96,479,3.96,480,3.96,481,3.96,482,3.96,483,3.96,484,3.96,485,3.96,486,3.96,487,3.96,488,3.96]],["title/miscellaneous/enumerations.html",[489,1.57,490,2.983]],["body/miscellaneous/enumerations.html",[8,0.039,16,0.031,17,0.031,45,0.826,105,3.941,114,2.121,139,2.635,140,3.941,141,3.941,147,3.941,155,3.643,171,3.941,172,3.941,489,2.379,490,3.16,491,3.838,492,3.838,493,3.838,494,4.787,495,4.787,496,3.838]],["title/miscellaneous/functions.html",[489,1.57,497,2.983]],["body/miscellaneous/functions.html",[8,0.034,16,0.034,17,0.034,24,2.485,45,0.976,460,3.734,489,2.812,497,3.734,498,4.536]],["title/index.html",[45,0.545,499,2.533,500,2.533]],["body/index.html",[4,0.232,8,0.037,16,0.02,17,0.02,35,2.323,117,2.589,146,3.085,154,1.454,204,1.014,213,4.15,214,1.694,320,2.559,406,3.882,452,1.454,453,2.559,501,2.057,502,2.057,503,3.747,504,3.109,505,2.057,506,2.057,507,2.057,508,2.057,509,3.109,510,3.747,511,2.057,512,2.057,513,4.176,514,2.057,515,5.041,516,2.057,517,4.896,518,2.057,519,2.057,520,2.057,521,3.109,522,2.057,523,3.109,524,2.057,525,3.747,526,2.057,527,2.057,528,2.057,529,2.057,530,2.057,531,2.057,532,4.176,533,3.109,534,2.057,535,2.057,536,2.057,537,2.057,538,2.057,539,4.715,540,3.109,541,4.176,542,2.057,543,3.109,544,2.057,545,2.057,546,3.109,547,4.484,548,4.176,549,2.057,550,3.109,551,2.057,552,2.057,553,2.057,554,2.057,555,4.176,556,2.057,557,2.057,558,2.057,559,2.057,560,2.057,561,3.109,562,2.057,563,2.057,564,2.057,565,2.057,566,2.057,567,3.109,568,2.057,569,2.057,570,2.057,571,3.109,572,2.057,573,2.057,574,3.438,575,3.109,576,2.057,577,2.057,578,2.057,579,2.057,580,2.057,581,2.057,582,2.057,583,2.057,584,3.109,585,2.057,586,2.057,587,2.057,588,2.057,589,2.057,590,2.057,591,2.057,592,2.057,593,2.057,594,2.057,595,3.109,596,2.057,597,2.057,598,2.057,599,2.057,600,2.057,601,3.109,602,2.057,603,2.057,604,2.057,605,3.109,606,3.109,607,2.057,608,2.057,609,2.057,610,2.057,611,2.057,612,2.057,613,2.057,614,2.057,615,2.057,616,2.057,617,2.057,618,1.694,619,2.057,620,2.057,621,2.057,622,2.057,623,2.057,624,2.057,625,1.694]],["title/modules.html",[20,1.814]],["body/modules.html",[8,0.033,16,0.033,17,0.033,19,2.634,20,1.883,30,2.093,31,2.339,32,1.883,574,4.657,626,5.657,627,5.657,628,5.657]],["title/overview.html",[629,3.37]],["body/overview.html",[2,1.036,8,0.038,10,2.346,16,0.027,17,0.027,18,1.145,19,3.581,20,1.405,21,1.405,22,1.745,23,1.745,24,1.405,25,1.745,26,1.745,27,2.609,28,2.609,29,2.609,30,2.683,31,3.06,32,2.464,33,2.329,34,1.745,35,1.562,43,1.745,59,2.464,62,2.609,63,2.609,64,2.609,75,2.223,98,1.562,205,3.483,296,2.346,308,2.609,310,2.609,430,2.609,431,2.609,432,2.609,629,2.609,630,4.23]],["title/properties.html",[101,1.785,474,2.085]],["body/properties.html",[8,0.038,16,0.034,17,0.034,101,2.2,204,2.2,618,3.677,625,3.677,631,4.466,632,4.466,633,4.466]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":632,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["01t12:00:00z",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1",{"_index":344,"title":{"controllers/UsersController-1.html":{}},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["1.1.26",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["100",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["10})@apiquery({name",{"_index":414,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["11.0.1",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["1223",{"_index":350,"title":{},"body":{"controllers/UsersController.html":{}}}],["123",{"_index":259,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["123})@isoptional()@isint()@type(undefined",{"_index":256,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["16",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":321,"title":{},"body":{"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["2.1.0",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":409,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["2023",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["33",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{},"overview.html":{}}}],["4})@isstring()@minlength(4)@isnotempty",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["5",{"_index":630,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["9]+)*$'})@isstring()@isnotempty()@matches(/^[a",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["address",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{}}}],["alice",{"_index":449,"title":{},"body":{"injectables/UsersService.html":{}}}],["alice@doe.com",{"_index":450,"title":{},"body":{"injectables/UsersService.html":{}}}],["allowing",{"_index":562,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":611,"title":{},"body":{"index.html":{}}}],["api",{"_index":417,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["apioperation",{"_index":422,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["apiproperty",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiproperty({description",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({description",{"_index":113,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apiquery",{"_index":423,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["apiresponse",{"_index":424,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["apitags",{"_index":298,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController-1.html":{}}}],["apitags('posts",{"_index":302,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":425,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["app.controller",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":406,"title":{},"body":{"controllers/UsersController-1.html":{},"index.html":{}}}],["applications",{"_index":509,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["archived",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["array",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["associated",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["auth",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":55,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":618,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":59,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["aws",{"_index":550,"title":{},"body":{"index.html":{}}}],["backers",{"_index":612,"title":{},"body":{"index.html":{}}}],["based",{"_index":545,"title":{},"body":{"index.html":{}}}],["bck.ts",{"_index":324,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["bck.ts:40",{"_index":337,"title":{},"body":{"controllers/UsersController.html":{}}}],["bck.ts:58",{"_index":331,"title":{},"body":{"controllers/UsersController.html":{}}}],["bck.ts:71",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{}}}],["bck.ts:77",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{}}}],["bck.ts:82",{"_index":333,"title":{},"body":{"controllers/UsersController.html":{}}}],["board",{"_index":604,"title":{},"body":{"index.html":{}}}],["body",{"_index":295,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["boolean",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["both",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{}}}],["browse",{"_index":628,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":626,"title":{},"body":{"modules.html":{}}}],["building",{"_index":504,"title":{},"body":{"index.html":{}}}],["cases",{"_index":346,"title":{},"body":{"controllers/UsersController.html":{}}}],["channel",{"_index":577,"title":{},"body":{"index.html":{}}}],["character",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["characters",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["check",{"_index":539,"title":{},"body":{"index.html":{}}}],["class",{"_index":13,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":98,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["clicks",{"_index":561,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":544,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":62,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":63,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":64,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":308,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":309,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":310,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":430,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":431,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":432,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":568,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["console.log('getuserparamdto",{"_index":387,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('headers",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('ip",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('isauth",{"_index":446,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log('limit",{"_index":385,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('page",{"_index":386,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('params",{"_index":382,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('patch",{"_index":397,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["console.log('request",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["console.log('type",{"_index":383,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('userid",{"_index":318,"title":{},"body":{"injectables/PostsService.html":{}}}],["console.log(createpostdto",{"_index":307,"title":{},"body":{"controllers/PostsController.html":{}}}],["const",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":438,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController-1.html":{}}}],["constructor(usersservice",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["content",{"_index":102,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{}}}],["controller('auth",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":301,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["convert",{"_index":341,"title":{},"body":{"controllers/UsersController.html":{}}}],["courses",{"_index":583,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":452,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchUserDto.html":{}}}],["createpost",{"_index":284,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(@body",{"_index":306,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":286,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostdto",{"_index":97,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["createpostmetaoptionsdto",{"_index":128,"title":{"classes/CreatePostMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":222,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{}}}],["createusers",{"_index":325,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["createusers(@body",{"_index":429,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["createusers(@req",{"_index":390,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(createuserdto",{"_index":330,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["data",{"_index":398,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["date",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":112,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["deeper",{"_index":579,"title":{},"body":{"index.html":{}}}],["default",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["defaultvaluepipe(1",{"_index":381,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["defaultvaluepipe(10",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["defined",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":332,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["deleteuser",{"_index":326,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":532,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":549,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":540,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":560,"title":{},"body":{"index.html":{}}}],["description",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController-1.html":{},"index.html":{},"properties.html":{}}}],["design",{"_index":274,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["development",{"_index":518,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":590,"title":{},"body":{"index.html":{}}}],["discord",{"_index":576,"title":{},"body":{"index.html":{}}}],["dive",{"_index":578,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":453,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["draft",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["dry",{"_index":275,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["dto's",{"_index":375,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/create",{"_index":299,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["dtos/get",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["dtos/patch",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["e.g",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["e2e",{"_index":527,"title":{},"body":{"index.html":{}}}],["each",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":505,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":537,"title":{},"body":{"index.html":{}}}],["eight",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["email",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["endpoint",{"_index":339,"title":{},"body":{"controllers/UsersController.html":{}}}],["endpoints",{"_index":389,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["ensure",{"_index":535,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":594,"title":{},"body":{"index.html":{}}}],["entries",{"_index":411,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["enum",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":490,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/poststatus.enum",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enums/posttype.enum",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["example",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController-1.html":{},"index.html":{}}}],["experience",{"_index":581,"title":{},"body":{"index.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["extended",{"_index":271,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["extends",{"_index":276,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["false",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController-1.html":{}}}],["false})@isiso8601()@isoptional",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["false})@isoptional()@isarray()@isstring({each",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["false})@isoptional()@isjson",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["false})@isoptional()@isurl",{"_index":126,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["false})@isstring()@isoptional",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["fast",{"_index":553,"title":{},"body":{"index.html":{}}}],["featured",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["featuredimageurl",{"_index":103,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["features",{"_index":564,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":407,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["fetches",{"_index":403,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["few",{"_index":555,"title":{},"body":{"index.html":{}}}],["fields",{"_index":270,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["final",{"_index":338,"title":{},"body":{"controllers/UsersController.html":{}}}],["find",{"_index":451,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall",{"_index":314,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall(getuserparamdto",{"_index":440,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(userid",{"_index":316,"title":{},"body":{"injectables/PostsService.html":{}}}],["findonebyid",{"_index":437,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid(id",{"_index":442,"title":{},"body":{"injectables/UsersService.html":{}}}],["first",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["firstname",{"_index":225,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["focus",{"_index":563,"title":{},"body":{"index.html":{}}}],["follow",{"_index":598,"title":{},"body":{"index.html":{}}}],["format",{"_index":116,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["forwardref",{"_index":66,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":503,"title":{},"body":{"index.html":{}}}],["full",{"_index":593,"title":{},"body":{"index.html":{}}}],["function",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":497,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":558,"title":{},"body":{"index.html":{}}}],["get('/:id",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/{:id",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('{/:id",{"_index":336,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["get('{/:id}')@apioperation({summary",{"_index":402,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["get('{/:id}{/:optional",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('{/:userid",{"_index":290,"title":{},"body":{"controllers/PostsController.html":{}}}],["gethello",{"_index":47,"title":{},"body":{"injectables/AppService.html":{}}}],["getposts",{"_index":285,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param('userid",{"_index":304,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":289,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":499,"title":{"index.html":{}},"body":{}}],["getuserparamdto",{"_index":352,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["getusers",{"_index":327,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["getusers(getuserparamdto",{"_index":334,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["getusersparamdto",{"_index":251,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["graph",{"_index":586,"title":{},"body":{"index.html":{}}}],["grow",{"_index":608,"title":{},"body":{"index.html":{}}}],["hands",{"_index":580,"title":{},"body":{"index.html":{}}}],["handy",{"_index":569,"title":{},"body":{"index.html":{}}}],["headers",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{}}}],["hello",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":584,"title":{},"body":{"index.html":{}}}],["here",{"_index":616,"title":{},"body":{"index.html":{}}}],["https://example.com/image.jpg",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://nestjs.com",{"_index":622,"title":{},"body":{"index.html":{}}}],["id",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["id.'})@apiresponse({status",{"_index":408,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["identifier",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":272,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["index",{"_index":45,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":542,"title":{},"body":{"index.html":{}}}],["infrastructure",{"_index":566,"title":{},"body":{"index.html":{}}}],["inject",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":42,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":43,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["install",{"_index":557,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":516,"title":{},"body":{"index.html":{}}}],["integer",{"_index":263,"title":{},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{}}}],["interact",{"_index":587,"title":{},"body":{"index.html":{}}}],["ip",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{}}}],["isarray",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isemail",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@isnotempty",{"_index":227,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":211,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isint",{"_index":258,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["isiso8601",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isoptional",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{}}}],["isstring",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":219,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(96",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/^(?=.*[a",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(96",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["job",{"_index":601,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":603,"title":{},"body":{"index.html":{}}}],["john",{"_index":447,"title":{},"body":{"injectables/UsersService.html":{}}}],["john@doe.com",{"_index":448,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":614,"title":{},"body":{"index.html":{}}}],["json",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["kamil",{"_index":619,"title":{},"body":{"index.html":{}}}],["key",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"index.html":{}}}],["lastname",{"_index":226,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["learn",{"_index":572,"title":{},"body":{"index.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letter",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["letters",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["license",{"_index":625,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":606,"title":{},"body":{"index.html":{}}}],["limit",{"_index":335,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["linkedin",{"_index":600,"title":{},"body":{"index.html":{}}}],["list",{"_index":404,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["localhost:3000/posts/:userid",{"_index":292,"title":{},"body":{"controllers/PostsController.html":{}}}],["login",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":543,"title":{},"body":{"index.html":{}}}],["loop",{"_index":596,"title":{},"body":{"index.html":{}}}],["make",{"_index":269,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["makes",{"_index":551,"title":{},"body":{"index.html":{}}}],["managing",{"_index":565,"title":{},"body":{"index.html":{}}}],["mandatory",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["mapped",{"_index":267,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["markdown",{"_index":115,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matches",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/^(?=.*[a",{"_index":250,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":209,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":547,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(96",{"_index":248,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["message",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["meta",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["metadata",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":104,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["metaoptions.dto",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["metaoptions.dto.ts",{"_index":218,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["metaoptions.dto.ts:6",{"_index":220,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["metaoptions.dto.ts:9",{"_index":221,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["methods",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["minimum",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":215,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(4",{"_index":206,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":249,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":489,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":605,"title":{},"body":{"index.html":{}}}],["mode",{"_index":521,"title":{},"body":{"index.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":541,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":620,"title":{},"body":{"index.html":{}}}],["name",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":591,"title":{},"body":{"index.html":{}}}],["nest",{"_index":510,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":624,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":213,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":279,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/mau",{"_index":559,"title":{},"body":{"index.html":{}}}],["nestjs/platform",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController-1.html":{},"dependencies.html":{}}}],["new",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{}}}],["node.js",{"_index":502,"title":{},"body":{"index.html":{}}}],["npm",{"_index":515,"title":{},"body":{"index.html":{}}}],["number",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":216,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["offer",{"_index":602,"title":{},"body":{"index.html":{}}}],["official",{"_index":548,"title":{},"body":{"index.html":{}}}],["one",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["open",{"_index":607,"title":{},"body":{"index.html":{}}}],["option",{"_index":217,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["optional",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":629,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":474,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["pagination",{"_index":347,"title":{},"body":{"controllers/UsersController.html":{}}}],["param",{"_index":294,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["param('id",{"_index":374,"title":{},"body":{"controllers/UsersController.html":{}}}],["param.dto",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["param.dto.ts",{"_index":254,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["param.dto.ts:14",{"_index":257,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parameters",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["parseintpipe",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["part",{"_index":592,"title":{},"body":{"index.html":{}}}],["partial",{"_index":266,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["partialtype",{"_index":278,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["partialtype(createuserdto",{"_index":277,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["passed",{"_index":261,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["password",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{}}}],["patch",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["patchuser",{"_index":328,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["patchuser(@body",{"_index":396,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["patchuser(patchuserdto",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["patchuserdto",{"_index":264,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{}}}],["pattern",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["per",{"_index":413,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["platform",{"_index":546,"title":{},"body":{"index.html":{}}}],["please",{"_index":575,"title":{},"body":{"index.html":{}}}],["position",{"_index":415,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["possible",{"_index":538,"title":{},"body":{"index.html":{}}}],["post",{"_index":114,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["post.dto",{"_index":300,"title":{},"body":{"controllers/PostsController.html":{}}}],["post.dto.ts",{"_index":100,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["post.dto.ts:107",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:133",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:29",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:38",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:51",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:60",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:69",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:78",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:87",{"_index":127,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:96",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post\\nthis",{"_index":212,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":283,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":312,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":281,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postservice",{"_index":303,"title":{},"body":{"controllers/PostsController.html":{}}}],["postsmodule",{"_index":31,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":296,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["poststatus.draft",{"_index":210,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posttype",{"_index":105,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype.post",{"_index":207,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["prefix",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["private",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":523,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":501,"title":{},"body":{"index.html":{}}}],["project",{"_index":513,"title":{},"body":{"index.html":{}}}],["properties",{"_index":101,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"properties.html":{}}}],["provided",{"_index":427,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["provided.'})@apiquery({name",{"_index":410,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":60,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":297,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":421,"title":{},"body":{"controllers/UsersController-1.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":70,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["published",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["publishon",{"_index":106,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["put",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["query",{"_index":343,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["query('limit",{"_index":377,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["query('page",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["questions",{"_index":573,"title":{},"body":{"index.html":{}}}],["read",{"_index":615,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":531,"title":{},"body":{"index.html":{}}}],["real",{"_index":588,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["repeat",{"_index":273,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["replaceuser",{"_index":329,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["repository",{"_index":512,"title":{},"body":{"index.html":{}}}],["req",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["reqistered",{"_index":405,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["request",{"_index":262,"title":{},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["required",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController-1.html":{}}}],["requiring",{"_index":554,"title":{},"body":{"index.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":567,"title":{},"body":{"index.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":412,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["returns",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":495,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":517,"title":{},"body":{"index.html":{}}}],["runs",{"_index":536,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["sample_token",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":506,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":494,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["schema",{"_index":107,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["send",{"_index":388,"title":{},"body":{"controllers/UsersController.html":{}}}],["sent",{"_index":395,"title":{},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["series",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["server",{"_index":507,"title":{},"body":{"index.html":{}}}],["setup",{"_index":514,"title":{},"body":{"index.html":{}}}],["side",{"_index":508,"title":{},"body":{"index.html":{}}}],["simple",{"_index":556,"title":{},"body":{"index.html":{}}}],["slug",{"_index":108,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["small",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spaces",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["special",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["specific",{"_index":255,"title":{},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController-1.html":{}}}],["sponsors",{"_index":610,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../poststatus.enum.ts",{"_index":491,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../posttype.enum.ts",{"_index":492,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":44,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":49,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":56,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":435,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":65,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":444,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":69,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:11",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:16",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dtos/create",{"_index":99,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/enums/poststatus.enum.ts",{"_index":493,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/enums/posttype.enum.ts",{"_index":496,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":282,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:16",{"_index":291,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:21",{"_index":287,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":311,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":313,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:5",{"_index":315,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:8",{"_index":317,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/users/dtos/create",{"_index":223,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":252,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":265,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["src/users/providers/users.service.ts",{"_index":436,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:12",{"_index":441,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:34",{"_index":443,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:6",{"_index":439,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller",{"_index":323,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":399,"title":{},"body":{"controllers/UsersController-1.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:49",{"_index":418,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["src/users/users.controller.ts:58",{"_index":400,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["src/users/users.controller.ts:64",{"_index":419,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["src/users/users.controller.ts:70",{"_index":420,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["src/users/users.controller.ts:75",{"_index":401,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["src/users/users.module",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":433,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":519,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":522,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":524,"title":{},"body":{"index.html":{}}}],["started",{"_index":500,"title":{"index.html":{}},"body":{}}],["starter",{"_index":511,"title":{},"body":{"index.html":{}}}],["statements",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":109,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController-1.html":{}}}],["stay",{"_index":595,"title":{},"body":{"index.html":{}}}],["steps",{"_index":533,"title":{},"body":{"index.html":{}}}],["story",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["straightforward",{"_index":552,"title":{},"body":{"index.html":{}}}],["string",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["summary",{"_index":426,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["support",{"_index":574,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":627,"title":{},"body":{"modules.html":{}}}],["table",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":110,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["take",{"_index":534,"title":{},"body":{"index.html":{}}}],["test",{"_index":320,"title":{},"body":{"injectables/PostsService.html":{},"index.html":{}}}],["test:covdeployment",{"_index":529,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":528,"title":{},"body":{"index.html":{}}}],["tests",{"_index":525,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":609,"title":{},"body":{"index.html":{}}}],["this.authservice.isauth",{"_index":445,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.postservice.findall(userid",{"_index":305,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.usersservice.findall(getuserparamdto",{"_index":428,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["this.usersservice.findonebyid('1234",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findonebyid(userid",{"_index":319,"title":{},"body":{"injectables/PostsService.html":{}}}],["time",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["title",{"_index":111,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["touch",{"_index":617,"title":{},"body":{"index.html":{}}}],["transform",{"_index":260,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["transformer",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{}}}],["true})@minlength(3",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":623,"title":{},"body":{"index.html":{}}}],["type",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typeof",{"_index":384,"title":{},"body":{"controllers/UsersController.html":{}}}],["types",{"_index":268,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":214,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["undefined",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["undefined})@isenum(poststatus)@isnotempty",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isenum(posttype)@isnotempty",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unique",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController-1.html":{}}}],["unit",{"_index":526,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":633,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":597,"title":{},"body":{"index.html":{}}}],["url",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["use",{"_index":345,"title":{},"body":{"controllers/UsersController.html":{}}}],["used",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":280,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}}}],["user.dto.ts",{"_index":224,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:16",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:26",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:35",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userid",{"_index":293,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["users",{"_index":253,"title":{},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.controller",{"_index":434,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/1223",{"_index":348,"title":{},"body":{"controllers/UsersController.html":{}}}],["users/id?limit=10&page=1",{"_index":340,"title":{},"body":{"controllers/UsersController.html":{}}}],["users/users.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["users?limit=10&page=2",{"_index":351,"title":{},"body":{"controllers/UsersController.html":{}}}],["userscontroller",{"_index":322,"title":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{}},"body":{"controllers/UsersController.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":32,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":75,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"controllers/UsersController-1.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["using",{"_index":589,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validation",{"_index":376,"title":{},"body":{"controllers/UsersController.html":{}}}],["validationpipe",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["validator",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["value",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{}}}],["version",{"_index":631,"title":{},"body":{"properties.html":{}}}],["video",{"_index":582,"title":{},"body":{"index.html":{}}}],["visit",{"_index":571,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":585,"title":{},"body":{"index.html":{}}}],["void",{"_index":288,"title":{},"body":{"controllers/PostsController.html":{}}}],["want",{"_index":416,"title":{},"body":{"controllers/UsersController-1.html":{}}}],["watch",{"_index":520,"title":{},"body":{"index.html":{}}}],["website",{"_index":621,"title":{},"body":{"index.html":{}}}],["whose",{"_index":349,"title":{},"body":{"controllers/UsersController.html":{}}}],["without",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["working",{"_index":570,"title":{},"body":{"index.html":{}}}],["world",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":599,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":613,"title":{},"body":{"index.html":{}}}],["you're",{"_index":530,"title":{},"body":{"index.html":{}}}],["z0",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z\\d@$!%*#?&]{8",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*#?&])[a",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  imports: [forwardRef(() => UsersModule)],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, forwardRef, Inject } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService,\n  ) {}\n\n  public login(email: string, password: string, id: string) {\n    const user = this.usersService.findOneById('1234');\n    return 'SAMPLE_TOKEN';\n  }\n\n  public isAuth() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Content of the post in Markdown format', example: '# My First Post\nThis is the content of my first post.', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Featured image URL for the post', example: 'https://example.com/image.jpg', required: false})@IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Meta options for the post', type: 'array', required: false, items: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:133\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Type of the post (e.g., post, page, story, series)', enum: postType, example: undefined})@IsEnum(postType)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Date and time when the post should be published', example: '2023-10-01T12:00:00Z', required: false})@IsISO8601()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Schema for the post, in JSON format', example: '{\"key\": \"value\"}', required: false})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Unique slug for the post, used in the URL', example: 'my-first-post', pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$'})@IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'A slug should be all small letters and uses only \"-\" and without spaces. For example \"my-url\"'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Status of the post (e.g., draft, published, archived)', enum: postStatus, example: undefined})@IsEnum(postStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Tags associated with the post', example: undefined, required: false})@IsOptional()@IsArray()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Title of the post', example: 'My First Post', minLength: 4})@IsString()@MinLength(4)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEnum,\n  IsNotEmpty,\n  IsString,\n  MinLength,\n  Matches,\n  IsOptional,\n  IsJSON,\n  IsUrl,\n  IsISO8601,\n  IsArray,\n  ValidateNested,\n} from 'class-validator';\nimport { postStatus } from '../enums/postStatus.enum';\nimport { postType } from '../enums/postType.enum';\nimport { CreatePostMetaOptionsDto } from './create-post-metaoptions.dto';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CreatePostDto {\n  @ApiProperty({\n    description: 'Title of the post',\n    example: 'My First Post',\n    minLength: 4,\n  })\n  @IsString()\n  @MinLength(4)\n  @IsNotEmpty()\n  title: string;\n\n  @ApiProperty({\n    description: 'Type of the post (e.g., post, page, story, series)',\n    enum: postType,\n    example: postType.POST,\n  })\n  @IsEnum(postType)\n  @IsNotEmpty()\n  postType: postType;\n\n  @ApiProperty({\n    description: 'Unique slug for the post, used in the URL',\n    example: 'my-first-post',\n    pattern: '^[a-z0-9]+(?:-[a-z0-9]+)*$',\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n    message:\n      'A slug should be all small letters and uses only \"-\" and without spaces. For example \"my-url\"',\n  })\n  slug: string;\n\n  @ApiProperty({\n    description: 'Status of the post (e.g., draft, published, archived)',\n    enum: postStatus,\n    example: postStatus.DRAFT,\n  })\n  @IsEnum(postStatus)\n  @IsNotEmpty()\n  status: postStatus;\n\n  @ApiPropertyOptional({\n    description: 'Content of the post in Markdown format',\n    example: '# My First Post\\nThis is the content of my first post.',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  content?: string;\n\n  @ApiPropertyOptional({\n    description: 'Schema for the post, in JSON format',\n    example: '{\"key\": \"value\"}',\n    required: false,\n  })\n  @IsOptional()\n  @IsJSON()\n  schema?: string;\n\n  @ApiPropertyOptional({\n    description: 'Featured image URL for the post',\n    example: 'https://example.com/image.jpg',\n    required: false,\n  })\n  @IsOptional()\n  @IsUrl()\n  featuredImageUrl?: string;\n\n  @ApiPropertyOptional({\n    description: 'Date and time when the post should be published',\n    example: '2023-10-01T12:00:00Z',\n    required: false,\n  })\n  @IsISO8601()\n  @IsOptional()\n  publishOn?: Date;\n\n  @ApiPropertyOptional({\n    description: 'Tags associated with the post',\n    example: ['nestjs', 'typescript'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiPropertyOptional({\n    description: 'Meta options for the post',\n    type: 'array',\n    required: false,\n    items: {\n      type: 'object',\n      properties: {\n        key: {\n          type: 'string',\n          description: 'Key for the meta option',\n          example: 'meta-key',\n        },\n        value: {\n          type: 'string',\n          description: 'Value for the meta option',\n          example: 'meta-value',\n        },\n      },\n    },\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({ each: true })\n  @Type(() => CreatePostMetaOptionsDto)\n  metaOptions?: CreatePostMetaOptionsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDto.html":{"url":"classes/CreatePostMetaOptionsDto.html","title":"class - CreatePostMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dtos/create-post-metaoptions.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-metaoptions.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dtos/create-post-metaoptions.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreatePostMetaOptionsDto {\n  @IsString()\n  @IsNotEmpty()\n  key: string;\n\n  @IsNotEmpty()\n  value: any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {message: 'Minimum eight characters, at least one letter, one number and one special character'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(96)\n  firstName: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(3)\n  @MaxLength(96)\n  lastName?: string;\n\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(/^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/, {\n    message:\n      'Minimum eight characters, at least one letter, one number and one special character',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-param.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Get user with a specific ID', type: Number, example: 123})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-param.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsOptional } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class GetUsersParamDto {\n  @ApiPropertyOptional({\n    description: 'Get user with a specific ID',\n    type: Number,\n    example: 123,\n  })\n  @IsOptional()\n  @IsInt()\n  @Type(() => Number) //this will transform any type passed in the request to an integer\n  id?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                With this Partial Type of mapped-types,\nwe make all fields of CreateuserDto as optional\nwe extended the CreateUserDto class and included in this class\nDo Not Repeat design DRY\n\n            \n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\n/**\n * With this Partial Type of mapped-types,\n * we make all fields of CreateuserDto as optional\n * we extended the CreateUserDto class and included in this class\n * Do Not Repeat design DRY\n */\nexport class PatchUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createpostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createpostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('{/:userId}')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:16\n                        \n                    \n\n\n            \n                \n                        GET localhost:3000/posts/:userId\n'{/:userId}' optional\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Post, Body } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dtos/create-post.dto';\n\n@Controller('posts')\n@ApiTags('Posts')\nexport class PostsController {\n  constructor(private readonly postService: PostsService) {}\n\n  /**\n   * GET localhost:3000/posts/:userId\n   * '{/:userId}' optional\n   */\n  @Get('{/:userId}')\n  public getPosts(@Param('userId') userId: string) {\n    return this.postService.findAll(userId);\n  }\n\n  @Post()\n  public createPost(@Body() createpostDto: CreatePostDto) {\n    console.log(createpostDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_imports\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n  imports: [UsersModule],\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class PostsService {\n  constructor(private readonly usersService: UsersService) {}\n\n  public findAll(userId: string) {\n    console.log('userId', userId);\n\n    const user = this.usersService.findOneById(userId);\n    return [\n      {\n        user: user,\n        title: 'Test Title',\n        content: 'Test Content',\n      },\n      {\n        user: user,\n        title: 'Test Title 2',\n        content: 'Test Content 2',\n      },\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller-bck.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUsers\n                            \n                            \n                                    \n                                    Public\n                                deleteUser\n                            \n                            \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                            \n                                    \n                                    Public\n                                replaceUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUsers(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller-bck.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller-bck.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUserParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('{/:id}')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller-bck.ts:40\n                        \n                    \n\n\n            \n                \n                        Final Endpoint - /users/id?limit=10&page=1\nParam id - optional, convert to integer, cannot have a default value\nQuery limit - integer, default 10\nQuery page - integer, default 1\n===> USE CASES\n/users/ -> return all users with default pagination\n/users/1223 -> returns one user whose id is 1223\n/users?limit=10&page=2 -> returns page 2 with limit of pagination 10\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller-bck.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUserDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        replaceUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    replaceUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller-bck.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Patch,\n  Put,\n  Delete,\n  Param,\n  Query,\n  Body,\n  //Req,\n  // Headers,\n  // Ip,\n  ParseIntPipe,\n  DefaultValuePipe,\n  // ValidationPipe,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { GetUsersParamDto } from './dtos/get-users-param.dto';\nimport { PatchUserDto } from './dtos/patch-user.dto';\n// import type { Request } from 'express';\n\n@Controller('users')\nexport class UsersController {\n  /**\n   * Final Endpoint - /users/id?limit=10&page=1\n   * Param id - optional, convert to integer, cannot have a default value\n   * Query limit - integer, default 10\n   * Query page - integer, default 1\n   * ===> USE CASES\n   * /users/ -> return all users with default pagination\n   * /users/1223 -> returns one user whose id is 1223\n   * /users?limit=10&page=2 -> returns page 2 with limit of pagination 10\n   */\n\n  //@Get('/:id') // This is mandatory query param\n  //@Get('/{:id}') // This is when query param is optional\n  //@Get('{/:id}{/:optional}') // This is when both fields are optional\n  @Get('{/:id}')\n  public getUsers(\n    //@Param('id', ParseIntPipe) id: number | undefined,\n    @Param() getUserParamDto: GetUsersParamDto, //DTO's are used for validation\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    // console.log('Params:', id);\n    // console.log('Type of id:', typeof id);\n    console.log('Limit:', limit);\n    // console.log('Type of Limit:', typeof limit);\n    console.log('Page:', page);\n    // console.log('Type of Page:', typeof page);\n\n    console.log('getUserParamDto:', getUserParamDto);\n    return 'You send a get request to users endpoints';\n  }\n\n  @Post()\n  public createUsers(\n    @Body() createUserDto: CreateUserDto,\n    // @Headers() headers: any,\n    // @Ip() ip: string,\n  ) {\n    //public createUsers(@Req() request: Request) {\n    console.log('Request Body:', createUserDto);\n    // console.log('Headers:', headers);\n    // console.log('IP Address:', ip);\n    return 'You sent a post request to users endpoints';\n  }\n\n  @Patch()\n  public patchUser(@Body() patchUserDto: PatchUserDto) {\n    // console.log('Patch User Data:', patchUserDto);\n    return patchUserDto;\n  }\n\n  @Put()\n  public replaceUser() {\n    return 'You sent a put request to users endpoints';\n  }\n\n  @Delete()\n  public deleteUser() {\n    return 'You sent a delete request to users endpoints';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController-1.html":{"url":"controllers/UsersController-1.html","title":"controller - UsersController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUsers\n                            \n                            \n                                    \n                                    Public\n                                deleteUser\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                            \n                                    \n                                    Public\n                                replaceUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUsers(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUserParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('{/:id}')@ApiOperation({summary: 'Fetches a list of reqistered users on the application', description: 'Fetch a user by their unique ID.'})@ApiResponse({status: 200, description: 'Returns a list of users or a specific user if ID is provided.'})@ApiQuery({name: 'limit', type: Number, required: false, description: 'The number of entries returned per query', example: 10})@ApiQuery({name: 'page', type: Number, required: false, description: 'The position of the page that you want the API to return', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUserDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        replaceUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    replaceUser()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Patch,\n  Put,\n  Delete,\n  Param,\n  Query,\n  Body,\n  ParseIntPipe,\n  DefaultValuePipe,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { GetUsersParamDto } from './dtos/get-users-param.dto';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { UsersService } from './providers/users.service';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Get('{/:id}')\n  @ApiOperation({\n    summary: 'Fetches a list of reqistered users on the application',\n    description: 'Fetch a user by their unique ID.',\n  })\n  @ApiResponse({\n    status: 200,\n    description:\n      'Returns a list of users or a specific user if ID is provided.',\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: Number,\n    required: false,\n    description: 'The number of entries returned per query',\n    example: 10,\n  })\n  @ApiQuery({\n    name: 'page',\n    type: Number,\n    required: false,\n    description: 'The position of the page that you want the API to return',\n    example: 1,\n  })\n  public getUsers(\n    @Param() getUserParamDto: GetUsersParamDto,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    return this.usersService.findAll(getUserParamDto, limit, page);\n  }\n\n  @Post()\n  public createUsers(@Body() createUserDto: CreateUserDto) {\n    console.log('Request Body:', createUserDto);\n    return 'You sent a post request to users endpoints';\n  }\n\n  @Patch()\n  public patchUser(@Body() patchUserDto: PatchUserDto) {\n    // console.log('Patch User Data:', patchUserDto);\n    return patchUserDto;\n  }\n\n  @Put()\n  public replaceUser() {\n    return 'You sent a put request to users endpoints';\n  }\n\n  @Delete()\n  public deleteUser() {\n    return 'You sent a delete request to users endpoints';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './providers/users.service';\nimport { AuthModule } from 'src/auth/auth.module';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n  imports: [forwardRef(() => AuthModule)],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUserParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUserParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: string; firstName: string; email: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, forwardRef, Inject } from '@nestjs/common';\nimport { GetUsersParamDto } from '../dtos/get-users-param.dto';\nimport { AuthService } from 'src/auth/providers/auth.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @Inject(forwardRef(() => AuthService))\n    private readonly authService: AuthService,\n  ) {}\n\n  public findAll(\n    getUserParamDto: GetUsersParamDto,\n    limit: number,\n    page: number,\n  ) {\n    const isAuth = this.authService.isAuth();\n    console.log('isAuth', isAuth);\n    return [\n      {\n        firstName: 'John',\n        email: 'john@doe.com',\n      },\n      {\n        firstName: 'Alice',\n        email: 'alice@doe.com',\n      },\n    ];\n  }\n\n  /*\n    Find a user by Id\n  */\n  public findOneById(id: string) {\n    return {\n      id: id,\n      firstName: 'Alice',\n      email: 'alice@doe.com',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post-metaoptions.dto.ts\n            \n            class\n            CreatePostMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dtos/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-param.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.controller-bck.ts\n            \n            controller\n            UsersController\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/mapped-types : ^2.1.0\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.2.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            postStatus   (src/.../postStatus.enum.ts)\n                        \n                        \n                            postType   (src/.../postType.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/postStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/posts/enums/postType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
